start: tree+
tree: ( multiline | info | pair | "\t"* ) _NL [_INDENT tree+ _DEDENT]
_NL: /\r?\n([\t ]*)+/

LOWERCASE: "a".."z"
UPPERCASE: "A".."Z"
LETTER: LOWERCASE | UPPERCASE

NONZERO: "1".."9"
DIGIT: NONZERO | "0"
ALPHANUMERIC: LETTER | DIGIT
INT: NONZERO DIGIT*
INTC: (INT ",")* INT

word: LETTER+
!wordlike: (word | (word ("-" | "'") word)) PUNCTUATION?
text: (expression PUNCTUATION? " ")* expression

BRACKETS: "[" | "]"
PUNCTUATION: ";" | ":" | "," | "-" | "_" | "/" | "'"
		| "." | "{" | "}" | "(" | ")" | "~"
		| "`" | ">" | "?" | "=" | "&" | "*" | "#" | "%"
ANY: LETTER | PUNCTUATION | DIGIT | " "

pair: text ":" " "? (info | multiline | url | quote) // a key-value pair, i.e. in a dictionary; useful for setting parameters and formatting rules for trees
info.1: text
multiline.2: "[" (info _NL?)+ "]" // text across multiple lines (useful in a line-based text editor like Vim)
group: "{" text | multiline "}" // a simple wrapper to combine other nodes, e.g. for executing a function on some block of text
expression: INT | INTC | acronym | group | wordlike | command | funccall | keyword | paren // an expression, something that can be acted upon by functions/commands
quote: "\"" (ANY | BRACKETS | ":")* "\"" // quoted text which can be used to define formatting templates
!command: ("%" | "^") expression // a command that processes a group of nodes
!url: "http" "s"? (PUNCTUATION | ALPHANUMERIC)+ // a standard web URL
funccall: wordlike "(" wordlike ")"
//ext: "." wordlike
keyword: "`" "."? expression "`"
filename: word "." word
paren: "(" text ")"
acronym: (LETTER ".")+

//list:
//clist:

%import common.WS_INLINE
%declare _INDENT _DEDENT
//%ignore WS_INLINE
